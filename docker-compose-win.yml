# Usage:
# docker compose -f docker-compose-win.yml --profile all up -d
# docker compose -f docker-compose-mac.yml --profile otel-all up -d
# docker compose -f docker-compose-win.yml --profile otel-no-monitoring --profile services-all up -d

services:
  weather.api:
    image: ${DOCKER_REGISTRY-}weather
    build:
      context: .
      dockerfile: Architecture/WeatherAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 5100:5100
    depends_on:
      - location.api
    networks:
      otel:
    profiles:
      - services-all      

  location.api:
    image: ${DOCKER_REGISTRY-}location
    build:
      context: .
      dockerfile: Architecture/LocationAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 5500:5500
    depends_on:
      rabbitmq:
        condition: service_healthy # wait for rabbitmq to be healthy
    networks:
      otel:
    profiles:
      - services-all

  serviceworker:
    image: ${DOCKER_REGISTRY-}serviceworker
    build:
      context: .
      dockerfile: Architecture/ServiceWorker/Dockerfile
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy # wait for rabbitmq to be healthy
    networks:
      otel:
    profiles:
      - services-all

  blackbox:
    # https://github.com/prometheus/blackbox_exporter/releases
    image: prom/blackbox-exporter:v0.27.0
    container_name: blackbox
    restart: unless-stopped
    ports:
      - 9115:9115
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./Docker/blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    networks:
      - otel
    profiles:
      - otel-all

  otel-lgtm:
    # https://github.com/grafana/docker-otel-lgtm/releases
    image: grafana/otel-lgtm:0.11.5
    container_name: otel-lgtm
    ports:
      - 3000:3000
      - 4317:4317
      # - 4318:4318
    depends_on:
      blackbox:
        condition: "service_started"
        required: false
    volumes:
      - ${PWD}/Docker/prometheus.yml:/otel-lgtm/prometheus.yaml
      - ${PWD}/Docker/grafana/provisioning:/otel-lgtm/grafana/conf/provisioning
    networks:
      otel:
    profiles:
      - all
      - otel-all
      - otel-no-monitoring
  
  rabbitmq:
    # https://github.com/docker-library/rabbitmq
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5
    networks:
      otel:
    profiles:
      - services-all

networks:
  otel: